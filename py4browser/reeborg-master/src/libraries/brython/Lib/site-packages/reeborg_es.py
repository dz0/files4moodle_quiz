from browser import window

from reeborg_common import *

__id = "es"

_usage_ = '''
<h2 id="%s">Comandos básicos</h2>
<p>Nota: En Javascript, "true" (verdadero) y "false" (falso) son todos, en minúsculas.
En Python, inicio Verdadero y Falso con una letra mayúscula.
Para evitar tener que especificar ambas posibilidades cada vez,
"verdadero" y "falso" se utilizará en lugar de abajo.
Además de comprender Javascript o Python, Reeborg,
y todos los otros robots, conocer las siguientes instrucciones:</p>
<ul>
<li><code>en_objetivo()</code>: Estado en que es "true" si Reeborg ha llegado a "casa"</li>
<li><code>construir_pared()</code>: añade una pared justo en frente de donde es Reeborg</li>
<li><code>termine()</code>: Indica que el programa deje (fin) en ese punto.</li>
<li><code>nada_al_frente()</code>: "true" si hay una pared bloqueando el camino de Reeborg</li>
<li><code>mirando_al_norte()</code>:"true" si Reeborg se enfrenta a Norte (hacia la parte superior de la pantalla)</li>
<li><code>avanzar()</code></li>
<li><code>depositar()</code> o <code>depositar("objeto")</code>
 donde objeto es uno de <code>"ficha"</code>, <code>"triangulo"</code>, <code>"cuadrado"</code> o <code>"estrella"</code>.
 </li>
<li><code>nada_a_la_derecha()</code>: "true" si hay pared está a la derecha inmediata de Reeborg</li>
<li><code>repetir(f, n)</code>: ejecuta  ``f()`` n veces</li>
<li><code>objeto_aqui()</code>: "false" si no hay ningún objeto en la ubicación del Reeborg,
de lo contrario, devuelve el nombre del objeto, <code>"triangulo"</code>, <code>"cuadrado"</code> o <code>"estrella"</code>,
 o <code>"ficha"</code>.</li>
<li><code>recoger()</code> or <code>recoger("objeto")</code> donde objeto es uno de
    <code>"ficha"</code>, <code>"triangulo"</code>, <code>"cuadrado"</code> o
    <code>"estrella"</code></li>
<li><code>girar_a_la_izquierda()</code></li>
</ul>
<p>Para crear robots adicionales, se puede utilizar <code>RoborUsado</code>
precedido de "new" si se utiliza Javascript.
</p>
<p>Además, los siguientes comandos están disponibles y no están vinculados a ningún robot en particular.</p>
<ul>
<li><code>from my_lib import *</code>: por <b>Python</b>, incluye el código que
    se encuentra en la ficha Biblioteca</li>
<li><code>examine(objeto)</code>: muestra el resultado en el Diario de Reeborg</li>
<li><code>pausa()</code>; puede ser llamado con un argumento en milisegundos que indica
    el tiempo después de lo cual se reanudará automáticamente.</li>
<li><code>sonido("true")</code>: giros suenan sucesivamente. Se puede desactivar llamando
    sin argumentos o con "false".
    Desactivado de forma predeterminada o si el retraso entre las acciones es inferior a 250 ms.</li>
<li><code>pensar(número)</code>: establece la cantidad de tiempo en milisegundos entre
    cada acción del robot.</li>
<li><code>escribir(cadena)</code>: escribir una cadena en el Diario de Reeborg sólo
    si el mundo es visible - de lo contrario, utilice <code>print</code>.</li>
<li><code>seleccionar_mundo(string)</code>: selecciona un mundo dado.</li>
    <li><code>seleccionar_desafio(string)</code>: selecciona una (oculto) mundo dado.</li>
<li><code>print(cadena)</code>: sólo es válida con Python. Algo equivalente a.
     <code>escribir</code>.</li>
<li><code>ver_fuente()</code></li>
</ul>
''' % ("basic-commands-" + __id)

RUR = window.RUR
RUR.ui.add_help(_usage_, __id, "Español",
        "En lugar de biblio, ficha, estrella, triángulo y cuadrado, uso:")


# RUR._x_ defined in commands.js
en_objetivo = RUR._at_goal_
construir_pared = RUR._build_wall_
nada_al_frente = RUR._front_is_clear_
mirando_al_norte = RUR._is_facing_north_
avanzar = RUR._move_
depositar = RUR._put_
nada_a_la_derecha = RUR._right_is_clear_
objeto_aqui = RUR._object_here_
recoger = RUR._take_
girar_a_la_izquierda = RUR._turn_left_
repetir = RUR._repeat_
maximo_comandos = RUR._set_max_steps_
# defined in rur_utils.js
examine = RUR.inspect
ver_fuente = RUR.view_source
# defined in control.js
escribir = RUR.control.write
termine = RUR.control.done
sonido = RUR.control.sound
pensar = RUR.control.think
pausa = RUR.control.pause
# defined in ui.js
seleccionar_mundo = RUR.ui.select_world
seleccionar_desafio = RUR.ui.select_challenge

'''
# The following is the only language specific function which can only be used in monde.html,
# not when imported from world.html
try:
    verify = RUR.verify
except AttributeError:
    pass
'''

class RobotUsado(object):
    def __init__(self, x=1, y=1, orientacion='e', ficha=None):
        if ficha is None:
            robot = RUR.robot.create_robot(x, y, orientacion)
        else:
            robot = RUR.robot.create_robot(x, y, orientacion, ficha)
        self.body = robot
        RUR.world.add_robot(self.body)

    def en_objetivo(self):
        self.at_goal(self.body)

    def construir_pared(self):
        self.build_wall(self.body)

    def nada_al_frente(self):
        self.front_is_clear(self.body)

    def nada_a_la_derecha(self):
        self.right_is_clear(self.body)

    def mirando_al_norte(self):
        self.is_facing_north(self.body)

    def avanzar(self):
        self.move(self.body)

    def depositar(self, arg=False):
        self.put(self.body, arg)

    def objeto_aqui(self, obj=''):
        self.object_here(self.body, obj)

    def recoger(self, arg=False):
        self.take(self.body, arg)

    def girar_a_la_izquierda(self):
        self.turn_left(self.body)

    # do not document this in the usage section
    # and leave untranslated
    def __get_world_map(self):
        import json
        return json.loads(RUR.control.get_world_map())

print("WARNING: the Spanish version is incomplete and may very well be buggy.")
